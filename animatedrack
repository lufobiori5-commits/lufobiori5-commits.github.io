<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Scroll-Assembled Server Rack</title>
<style>
  :root{
    --w: min(780px, 94vw);
    --h: 980px;

    --orange: #F68732;
    --grey: #3E3A39;
    --white: #FFFFFF;

    --rack-w: 380px;
    --rack-h: 760px;
    --rim: 14px;
  }

  *{box-sizing:border-box}
  html,body{height:100%}
  body{
    margin:0; font-family: ui-sans-serif,system-ui,Segoe UI,Roboto,Arial;
    background: #0f1115; color:#e9e9e9;
  }

  .scroll-wrap{height:260vh}
  .pin{position:sticky; top:0; height:100vh; display:grid; place-items:center}

  /* Stage */
  .stage{
    position:relative; width:var(--w); height:var(--h);
    border-radius:24px; background: radial-gradient(1200px 600px at 50% 120%, #0b0e15 25%, #121723 60%, #0a0d14 100%);
    box-shadow: inset 0 40px 100px rgba(0,0,0,.35);
    overflow:hidden;
  }
  .title{
    position:absolute; inset:18px 18px auto 18px; opacity:.75; font-weight:600; letter-spacing:.3px;
  }

  /* Pieces */
  .piece{
    position:absolute; left:0; top:0; will-change: transform, opacity;
    filter: drop-shadow(0 12px 24px rgba(0,0,0,.45));
    opacity:0;
  }

  /* Rack internals */
  .rack-back{
    width: var(--rack-w); height: var(--rack-h);
    background: linear-gradient(180deg, #171a21, #12151b 60%, #0f1217);
    border-radius: 12px;
    box-shadow: inset 0 0 0 1px #1d222c, inset 0 0 60px rgba(0,0,0,.6);
  }
  .rack-bezel{
    width: calc(var(--rack-w) + var(--rim)*2); height: calc(var(--rack-h) + var(--rim)*2);
    background:
      linear-gradient(#20252e, #1a1f27) padding-box,
      linear-gradient(#3b3f46, #0c0e12) border-box;
    border: var(--rim) solid transparent;
    border-radius: 18px;
    box-shadow:
      0 16px 40px rgba(0,0,0,.55),
      inset 0 0 0 2px rgba(255,255,255,.04);
    pointer-events:none;
  }
  .feet{
    width: calc(var(--rack-w) + 60px); height:18px; border-radius: 18px;
    background: linear-gradient(#5d6268, #3f4449); filter: drop-shadow(0 10px 22px rgba(0,0,0,.55));
  }

  /* Top label bar / handle */
  .topbar{
    width: calc(var(--rack-w) - 22px); height: 32px; border-radius:8px;
    background: linear-gradient(#222833, #161b24);
    box-shadow: inset 0 0 0 1px #2b3340;
    display:flex; align-items:center; gap:10px; padding:0 12px;
  }
  .topbar::before{
    content:""; width:14px; height:14px; border-radius:50%;
    background: var(--orange); box-shadow: 0 0 10px rgba(246,135,50,.55);
  }
  .topbar span{ font-size:12px; letter-spacing:.4px; opacity:.85 }

  /* PSU bottom */
  .psu{
    width: calc(var(--rack-w) - 24px); height: 84px; border-radius:10px;
    background: linear-gradient(180deg, #1e232c, #141922);
    box-shadow: inset 0 0 0 1px #2a303b, inset 0 -10px 30px rgba(0,0,0,.35);
    display:grid; grid-template-columns: 1fr 90px; gap:10px; padding:10px;
  }
  .psu .grille{
    border-radius:8px; background:
      repeating-linear-gradient(90deg, #0000 0 6px, #2b3340 6px 8px);
    box-shadow: inset 0 0 0 1px #2a303b;
  }
  .psu .fans{ display:grid; grid-template-columns:1fr 1fr; gap:10px; }
  .psu .fan{
    border-radius:8px; background:
      radial-gradient(circle at 50% 50%, #0d1118 22px, #1a1f27 23px 100%),
      repeating-radial-gradient(circle at 50% 50%, #2a303b 0 1px, #0000 1px 3px);
    border:1px solid #2a303b; aspect-ratio:1/1;
  }

  /* Network switch (top) */
  .switch{
    width: calc(var(--rack-w) - 24px); height: 56px; border-radius:10px;
    background: linear-gradient(180deg, #1e242e, #141a23);
    box-shadow: inset 0 0 0 1px #2a303b;
    position:relative; padding:10px 12px;
  }
  .ports{
    position:absolute; left:12px; right:12px; top:50%; transform: translateY(-50%);
    display:grid; grid-template-columns: repeat(24, 1fr); gap:4px;
  }
  .port{
    height:14px; border-radius:3px; background: #0d1218; box-shadow: inset 0 0 0 1px #2a303b;
  }
  .port:nth-child(3n){ background: linear-gradient(#0d1218, #0d1218) padding-box, linear-gradient(var(--orange), var(--orange)) border-box; border:1px solid transparent;}

  /* Drive cage */
  .cage{
    width: calc(var(--rack-w) - 24px); height: 208px; border-radius:10px;
    background: linear-gradient(180deg, #1b2029, #131820);
    box-shadow: inset 0 0 0 1px #2a303b, inset 0 -18px 30px rgba(0,0,0,.25);
    padding:12px;
    display:grid; grid-template-columns: repeat(4, 1fr); grid-template-rows: repeat(3, 1fr); gap:10px;
  }
  .bay{
    border-radius:8px; background:
      linear-gradient(#11161d, #0c1218);
    box-shadow: inset 0 0 0 1px #29303a;
    position:relative; overflow:hidden;
  }
  .bay::after{
    /* bay handle stripe */
    content:""; position:absolute; left:0; right:0; top:0; height:6px;
    background: linear-gradient(90deg, rgba(246,135,50,.9), rgba(246,135,50,.2));
  }

  /* Motherboard slab */
  .mobo{
    width: calc(var(--rack-w) - 24px); height: 160px; border-radius:12px;
    background: linear-gradient(180deg, #14221d, #101a16);
    box-shadow: inset 0 0 0 1px #284235, inset 0 -10px 24px rgba(0,0,0,.25);
    position:relative; overflow:hidden;
  }
  .mobo::before{
    content:""; position:absolute; inset:10px 12px auto 12px; height:6px;
    background: repeating-linear-gradient(90deg, #2b8f65 0 12px, #0000 12px 16px); opacity:.35; border-radius:3px;
  }
  .cpu{
    width:72px; height:72px; border-radius:10px; position:absolute; left:18px; top:18px;
    background: linear-gradient(180deg, #2d2f34, #191b20);
    box-shadow: inset 0 0 0 1px #3b3f46;
  }
  .cpu::after{
    content:""; position:absolute; inset:10px; border-radius:8px; background: var(--orange);
    box-shadow: inset 0 0 0 2px rgba(0,0,0,.35), 0 0 24px rgba(246,135,50,.5);
  }
  .ram{ position:absolute; left:110px; right:18px; height:20px; border-radius:6px;
        background: linear-gradient(180deg, #1e7d55, #15593e);
        box-shadow: inset 0 0 0 1px #2a9d6f; }
  .ram.r2{ top:22px } .ram.r3{ top:52px } .ram.r4{ top:82px }

  /* GPUs */
  .gpu{
    width: calc(var(--rack-w) - 60px); height:56px; border-radius:10px; margin:0;
    background: linear-gradient(180deg, #242934, #141821);
    box-shadow: inset 0 0 0 1px #2a303b;
    display:grid; grid-template-columns: 1fr 56px 56px; gap:10px; padding:10px;
  }
  .gpu .label{
    align-self:center; font-size:12px; letter-spacing:.4px; opacity:.8; color:var(--white);
  }
  .fan{
    border-radius:9px; background:
      radial-gradient(circle at 50% 50%, #0d1118 20px, #1a1f27 21px 100%),
      repeating-radial-gradient(circle at 50% 50%, #2a303b 0 1px, #0000 1px 3px);
    border:1px solid #2a303b;
  }
  .gpu.orange{ outline: 2px solid var(--orange); box-shadow: inset 0 0 0 1px #2a303b, 0 0 24px rgba(246,135,50,.25)}
  .gpu .led{
    width: 46px; height: 8px; margin-top:6px; border-radius:4px;
    background: linear-gradient(90deg, rgba(246,135,50,.85), rgba(246,135,50,.15));
  }

  /* Tiny callout */
  .hint{ position:fixed; right:16px; bottom:16px; font-size:13px; opacity:.6; user-select:none }

  /* Color tokens used on little badges */
  .badge{ background: var(--orange); color:#000; padding:2px 6px; border-radius:6px; font-weight:700; font-size:10px; letter-spacing:.3px }
</style>
</head>
<body>
  <div class="scroll-wrap">
    <div class="pin">
      <div class="stage" id="stage">
        <div class="title">Scroll down — the rack assembles <span class="badge">#F68732 / #3E3A39 / #FFFFFF</span></div>

        <!-- Back panel and bezel (drawn first, but we animate all) -->
        <div class="piece rack-back" data-x="0" data-y="0" data-tag="back"></div>

        <!-- Top switch -->
        <div class="piece switch" data-x="12" data-y="22">
          <div class="ports">
            <!-- 24 ports -->
            <div class="port"></div><div class="port"></div><div class="port"></div>
            <div class="port"></div><div class="port"></div><div class="port"></div>
            <div class="port"></div><div class="port"></div><div class="port"></div>
            <div class="port"></div><div class="port"></div><div class="port"></div>
            <div class="port"></div><div class="port"></div><div class="port"></div>
            <div class="port"></div><div class="port"></div><div class="port"></div>
            <div class="port"></div><div class="port"></div><div class="port"></div>
            <div class="port"></div><div class="port"></div><div class="port"></div>
          </div>
        </div>

        <!-- Top bar / label -->
        <div class="piece topbar" data-x="12" data-y="72"><span>ABISSNET • RACK-42U</span></div>

        <!-- Drive cage with 12 bays -->
        <div class="piece cage" data-x="12" data-y="112">
          <!-- 12 bays -->
          <div class="bay"></div><div class="bay"></div><div class="bay"></div><div class="bay"></div>
          <div class="bay"></div><div class="bay"></div><div class="bay"></div><div class="bay"></div>
          <div class="bay"></div><div class="bay"></div><div class="bay"></div><div class="bay"></div>
        </div>

        <!-- Motherboard slab + CPU + RAM -->
        <div class="piece mobo" data-x="12" data-y="334"></div>
        <div class="piece cpu" data-x="30" data-y="352"></div>
        <div class="piece ram r2" data-x="130" data-y="356"></div>
        <div class="piece ram r3" data-x="130" data-y="386"></div>
        <div class="piece ram r4" data-x="130" data-y="416"></div>

        <!-- GPUs -->
        <div class="piece gpu orange" data-x="30" data-y="514">
          <div class="label">GPU 01</div><div class="fan"></div><div class="fan"></div>
          <div class="led"></div>
        </div>
        <div class="piece gpu" data-x="30" data-y="582">
          <div class="label">GPU 02</div><div class="fan"></div><div class="fan"></div>
          <div class="led"></div>
        </div>

        <!-- PSU bottom -->
        <div class="piece psu" data-x="12" data-y="656">
          <div class="grille"></div>
          <div class="fans"><div class="fan"></div><div class="fan"></div></div>
        </div>

        <!-- Foreground bezel (metal frame) -->
        <div class="piece rack-bezel" data-x="-14" data-y="-14"></div>

        <!-- Feet / base -->
        <div class="piece feet" data-x="-30" data-y="790"></div>
      </div>
    </div>
  </div>

  <div class="hint">Tip: tweak <code>--rack-w</code>/<code>--rack-h</code> and the piece positions.</div>

<script>
(() => {
  const wrap = document.querySelector('.scroll-wrap');
  const stage = document.getElementById('stage');
  const pieces = [...document.querySelectorAll('.piece')];

  // Layout constants
  const RACK_W = parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--rack-w')) || 380;
  const RACK_H = parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--rack-h')) || 760;
  const RACK_Y = 100; // top offset inside stage

  // Precompute final positions
  function makeMeta(){
    const stageRect = stage.getBoundingClientRect();
    const rackX = (stageRect.width - RACK_W) / 2;    // center the rack
    return pieces.map((el, i) => {
      const x = rackX + (parseFloat(el.dataset.x) || 0);
      const y = RACK_Y + (parseFloat(el.dataset.y) || 0);

      // Golden-angle spiral for "exploded" offsets
      const theta = (i * 137.50776405) * Math.PI / 180;
      const radius = 600 + i * 14;
      const dx = Math.cos(theta) * radius;
      const dy = Math.sin(theta) * radius;
      const rot = (i % 2 ? -30 : 30);

      return { el, x, y, dx, dy, rot };
    });
  }

  let meta = makeMeta();
  window.addEventListener('resize', () => { meta = makeMeta(); });

  function clamp(v,a,b){ return Math.min(Math.max(v,a),b); }
  function easeInOutCubic(t){ return t<.5 ? 4*t*t*t : 1 - Math.pow(-2*t+2,3)/2; }

  function tick(){
    const rect = wrap.getBoundingClientRect();
    const total = Math.max(rect.height - window.innerHeight, 1);
    const passed = clamp(-rect.top, 0, total);
    const t = easeInOutCubic(passed / total); // 0..1

    meta.forEach(({el,x,y,dx,dy,rot}, idx) => {
      const inv = 1 - t;
      const tx = x + inv * dx;
      const ty = y + inv * dy;
      const r  = inv * rot;
      const s  = 1 + inv * 0.12;

      el.style.transform = `translate(${tx}px, ${ty}px) rotate(${r}deg) scale(${s})`;
      el.style.opacity = (t*t*1.1).toFixed(3);
      // Subtle focus glow on orange-accented parts as they settle
      if (t > 0.98 && el.classList.contains('orange')) {
        el.style.boxShadow = 'inset 0 0 0 1px #2a303b, 0 0 28px rgba(246,135,50,.45)';
      } else if (el.classList.contains('orange')) {
        el.style.boxShadow = 'inset 0 0 0 1px #2a303b, 0 0 24px rgba(246,135,50,.25)';
      }
    });

    requestAnimationFrame(tick);
  }
  requestAnimationFrame(tick);
})();
</script>
</body>
</html>
